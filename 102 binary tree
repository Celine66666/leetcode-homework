# Definition for a binary tree node.
from typing import Optional, List
from collections import deque

class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if not root:
            return []

        result = []

        nodes_queue = deque([root])
      
        while nodes_queue:
            level_length = len(nodes_queue)
            current_level = []

            for _ in range(level_length):
                node = nodes_queue.popleft()
                
                current_level.append(node.val)
               
                if node.left:
                    nodes_queue.append(node.left)
                if node.right:
                    nodes_queue.append(node.right)

        
            result.append(current_level)

        return result
